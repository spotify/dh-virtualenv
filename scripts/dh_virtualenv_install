#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright (c) 2013-2014 Spotify AB

# This file is part of dh-virtualenv.

# dh-virtualenv is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 2 of the
# License, or (at your option) any later version.

# dh-virtualenv is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with dh-virtualenv. If not, see
# <http://www.gnu.org/licenses/>.

import inspect
import logging
import os
import sys

# The debpython resides here
sys.path.insert(1, '/usr/share/python/')

from debpython.debhelper import DebHelper
from dh_virtualenv.install import Install
from dh_virtualenv.dhoptionparser import DebhelperOptionParser

logging.basicConfig(format='%(levelname).1s: %(module)s:%(lineno)d: '
                    '%(message)s')
log = logging.getLogger(__name__)


def main():
    usage = '%prog [options]'
    parser = DebhelperOptionParser(usage, version='%prog 0.7')
    parser.add_option('-p', '--package', action='append',
                      help='act on the package named PACKAGE')
    parser.add_option('-N', '--no-package', action='append',
                      help='do not act on the specified package')
    parser.add_option('-v', '--verbose', action='store_true',
                      default=False, help='Turn on verbose mode')
    parser.add_option('-d', '--destination', dest='destination',
                      help='Final destination path')
    parser.add_option('-P', '--tempdir', dest='package_dir',
                      help='Use tmpdir for package build directory. '
                      'The default is debian/package')
    parser.add_option('-B', '--builddirectory', dest='build_dir',
                      help='Build dir')

    options, args = parser.parse_args()
    verbose = options.verbose or os.environ.get('DH_VERBOSE') == '1'
    if verbose:
        log.setLevel(logging.DEBUG)

    # Older DebHelpers, like the one on Debian Squeeze, expect to be
    # passed the packages keyword argument. Newer (like Ubuntu
    # Precise) expect the whole options to be passed.

    arguments = inspect.getargspec(DebHelper.__init__).args
    if 'packages' in arguments:
        dh = DebHelper(packages=options.package or None)
    else:
        dh = DebHelper(options)
    for package, _ in dh.packages.items():
        def _info(msg):
            log.info('{0}: {1}'.format(package, msg))
        _info('Processing package...')

        install = Install(package,
                          destination=options.destination,
                          package_dir=options.package_dir,
                          build_dir=options.build_dir)
        install.relocate()
        install.fix_local_symlinks()

        _info('dh-virtualenv_install: All done!')

if __name__ == '__main__':
    sys.exit(main() or 0)
