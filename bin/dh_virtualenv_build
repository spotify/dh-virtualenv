#!/usr/bin/env python
# -*- coding: utf-8 -*-
# Copyright (c) 2014 Spotify AB

# This file is part of dh-virtualenv.

# dh-virtualenv is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as
# published by the Free Software Foundation, either version 2 of the
# License, or (at your option) any later version.

# dh-virtualenv is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with dh-virtualenv. If not, see
# <http://www.gnu.org/licenses/>.

import logging
import os
import sys

# The debpython resides here
sys.path.insert(1, '/usr/share/python/')

from dh_virtualenv.build import Build
from dh_virtualenv.dhoptionparser import DebhelperOptionParser

logging.basicConfig(format='%(levelname).1s: %(module)s:%(lineno)d: '
                    '%(message)s')
log = logging.getLogger(__name__)


def main():
    usage = '%prog [options]'
    parser = DebhelperOptionParser(usage, version='%prog 0.7')
    parser.add_option('-v', '--verbose', action='store_true',
                      default=False, help='Turn on verbose mode')
    parser.add_option('-s', '--setuptools', action='store_true', default=False,
                      help='Use Setuptools instead of Distribute')
    parser.add_option('--extra-index-url', action='append',
                      help='extra index URL to pass to pip.',
                      default=[])
    parser.add_option('--preinstall', action='append',
                      help=('package to install before processing '
                            'requirements.txt.'),
                      default=[])
    parser.add_option('--extra-pip-arg', action='append',
                      help='Extra args for the pip binary.'
                      'You can use this flag multiple times to pass in'
                      ' parameters to pip.', default=[])
    parser.add_option('--pypi-url', help='Base URL of the PyPI server')
    parser.add_option('--python', help='The Python to use')
    parser.add_option('--builtin-venv', action='store_true',
                      help='Use the built-in venv module. Only works on '
                      'Python 3.4 and later.')
    parser.add_option('-B', '--builddirectory', dest='build_dir',
                      help='Build dir')
    parser.add_option('-D', '--sourcedirectory', dest='sourcedirectory',
                      help='The source directory')
    parser.add_option('--no-test', action='store_false', dest='test',
                      help="Don't run tests for the package. Useful "
                      "for example when you have packaged with distutils.",
                      default=True)

    options, args = parser.parse_args()
    option_dict = vars(options)

    # TODO: Reduce redundancy with this and the Deployment.from_options
    verbose = options.verbose or os.environ.get('DH_VERBOSE') == '1'
    if verbose:
        log.setLevel(logging.DEBUG)

    log.info('Processing package...')
    build = Build.from_options(option_dict)

    log.info('Creating virtualenv')
    build.create_virtualenv()

    if options.preinstall:
        log.info('Installing dependencies')
        build.install_dependencies()


    log.info('Installing dependencies')
    build.install_requirements()

    log.info('Installing package')
    build.install_package()
    if options.test:
        log.info('Running tests')
        build.run_tests()
    else:
        log.info('Skipped tests')

    log.info('dh-virtualenv_build: All done!')

if __name__ == '__main__':
    sys.exit(main() or 0)
